"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[2972],{5134:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>a,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"skill/algorithm/two-sum","title":"\u4e24\u6570\u4e4b\u548c","description":"\u66b4\u529b\u679a\u4e3e","source":"@site/docs/skill/algorithm/1.\u4e24\u6570\u4e4b\u548c.md","sourceDirName":"skill/algorithm","slug":"/algorithm/two-sum","permalink":"/ktstudio-site/docs/algorithm/two-sum","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"algorithm","permalink":"/ktstudio-site/docs/tags/algorithm"}],"version":"current","sidebarPosition":1,"frontMatter":{"id":"two-sum","slug":"/algorithm/two-sum","title":"\u4e24\u6570\u4e4b\u548c","authors":"kuizuo","tags":["algorithm"],"keywords":["algorithm"]},"sidebar":"skill","previous":{"title":"\u7b80\u4ecb","permalink":"/ktstudio-site/docs/algorithm"},"next":{"title":"\u4e09\u6570\u4e4b\u548c","permalink":"/ktstudio-site/docs/algorithm/three-sum"}}');var i=n(5105),o=n(9999);const r={id:"two-sum",slug:"/algorithm/two-sum",title:"\u4e24\u6570\u4e4b\u548c",authors:"kuizuo",tags:["algorithm"],keywords:["algorithm"]},l=void 0,a={},u=[{value:"\u66b4\u529b\u679a\u4e3e",id:"\u66b4\u529b\u679a\u4e3e",level:2},{value:"\u54c8\u5e0c\u8868",id:"\u54c8\u5e0c\u8868",level:2}];function m(t){const e={code:"code",h2:"h2",pre:"pre",...(0,o.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{id:"\u66b4\u529b\u679a\u4e3e",children:"\u66b4\u529b\u679a\u4e3e"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"var twoSum = function (nums, target) {\n  const n = nums.length\n\n  for (let i = 0; i < n; i++) {\n    for (let j = 0; j < n; j++) {\n      if (nums[i] + nums[j] === target && i !== j) {\n        return [i, j]\n      }\n    }\n  }\n}\n"})}),"\n",(0,i.jsx)(e.h2,{id:"\u54c8\u5e0c\u8868",children:"\u54c8\u5e0c\u8868"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"var twoSum = function (nums, target) {\n  const map = new Map()\n\n  for (let i = 0; i < nums.length; i++) {\n    if (map.has(target - nums[i])) {\n      return [map.get(target - nums[i]), i]\n    }\n    map.set(nums[i], i)\n  }\n}\n"})})]})}function c(t={}){const{wrapper:e}={...(0,o.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(m,{...t})}):m(t)}},9999:(t,e,n)=>{n.d(e,{R:()=>r,x:()=>l});var s=n(8101);const i={},o=s.createContext(i);function r(t){const e=s.useContext(o);return s.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function l(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:r(t.components),s.createElement(o.Provider,{value:e},t.children)}}}]);